name: Build and Deploy

on:
  push:
    branches: [ develop ]

  workflow_dispatch:

jobs:
  check-files:
    runs-on: ubuntu-latest
    outputs:
      backend: ${{ steps.changes.outputs.backend }}
      frontend: ${{ steps.changes.outputs.frontend }}
      configs: ${{ steps.changes.outputs.configs }}
    steps:
      - uses: actions/checkout@v3
      - uses: dorny/paths-filter@v2.11.1
        id: changes
        with:
          token: ${{ github.token }}
          filters: .github/file-filters.yml

  build_backend:
    needs: check-files
    if: ${{ needs.check-files.outputs.backend == 'true' || needs.check-files.outputs.configs == 'true' }}
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push Backend
        uses: docker/build-push-action@v4
        with:
          tags: sleepergoose/backend:latest
          context: ./backend
          file: ./backend/Dockerfile
          build-args: PROJECT_PORT=5050
          push: true

  build_frontend:
    needs: check-files
    if: ${{ needs.check-files.outputs.frontend == 'true' || needs.check-files.outputs.configs == 'true' }}
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - uses: ./.github/actions/setup-pnpm
        with:
          path: ./frontend
      - name: Build frontend
        run: pnpm build
        working-directory: ./frontend
      - name: Build frontend docker image
        uses: docker/build-push-action@v4
        with:
          context: ./frontend
          file: ./frontend/Dockerfile
          push: true
          tags: sleepergoose/frontend:latest

  deploy_images:
    runs-on: ubuntu-latest
    if: |
      needs.build_backend.result == 'success' || 
      needs.build_frontend.result == 'success'
    needs:
        - build_backend
        - build_frontend
    steps:
      - name: Print to console
        run: echo Completed
